{"ast":null,"code":"var _jsxFileName = \"/Users/krshinn/Documents/GitHub/Pantrillo/src/components/FoodJoke.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodJoke() {\n  _s();\n\n  const [resultMsg, setResultMsg] = useState(\"Loading joke...\");\n  useEffect(() => {\n    //fetch from the API\n    async function fetchJoke() {\n      const response = await fetch(`https://api.spoonacular.com/food/jokes/random?apiKey=dc13f61c52a34390aca099bc71a28778`);\n      const data = await response.json();\n      return data.text;\n    } //variable to send the data\n\n\n    let jokeString = \"\"; //function to loop until you get a joke > 150 char\n\n    async function postJoke() {\n      while (jokeString === \"\" || jokeString.length > 150) {\n        jokeString = await fetchJoke();\n      } //state set to variable\n\n\n      setResultMsg(jokeString);\n    }\n\n    postJoke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"joke\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FoodJoke, \"MbE9YDdsZnl3JQqF3KY9pHIZoF0=\");\n\n_c = FoodJoke;\nexport default FoodJoke;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodJoke\");","map":{"version":3,"names":["React","useState","useEffect","FoodJoke","resultMsg","setResultMsg","fetchJoke","response","fetch","data","json","text","jokeString","postJoke","length"],"sources":["/Users/krshinn/Documents/GitHub/Pantrillo/src/components/FoodJoke.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction FoodJoke() {\n\tconst [resultMsg, setResultMsg] = useState(\"Loading joke...\");\n\n\tuseEffect(() => {\n\t\t//fetch from the API\n\t\tasync function fetchJoke(){\n\t\t\tconst response = await fetch(\n\t\t\t`https://api.spoonacular.com/food/jokes/random?apiKey=dc13f61c52a34390aca099bc71a28778`\n\t\t\t)\n\t\t\tconst data = await response.json()\n\t\t\treturn data.text\n\t\t}\n\t\t//variable to send the data\n\t\tlet jokeString = \"\"\n\n\t\t//function to loop until you get a joke > 150 char\n\t\tasync function postJoke(){\n\t\t\twhile(jokeString === \"\" || jokeString.length > 150) {\n\t\t\t\tjokeString = await fetchJoke()\n\t\t\t}\n\n\t\t\t//state set to variable\n\t\t\tsetResultMsg(jokeString);\n\t\t}\n\t\tpostJoke()\n\n\t}, [])\n\n\treturn(\n\t\t<div className=\"joke\">\n\t\t\t<p>{resultMsg}</p>\n\t\t</div>\n\t)\n}\n\nexport default FoodJoke"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EACnB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,iBAAD,CAA1C;EAEAC,SAAS,CAAC,MAAM;IACf;IACA,eAAeI,SAAf,GAA0B;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,uFAD2B,CAA5B;MAGA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACA,OAAOD,IAAI,CAACE,IAAZ;IACA,CARc,CASf;;;IACA,IAAIC,UAAU,GAAG,EAAjB,CAVe,CAYf;;IACA,eAAeC,QAAf,GAAyB;MACxB,OAAMD,UAAU,KAAK,EAAf,IAAqBA,UAAU,CAACE,MAAX,GAAoB,GAA/C,EAAoD;QACnDF,UAAU,GAAG,MAAMN,SAAS,EAA5B;MACA,CAHuB,CAKxB;;;MACAD,YAAY,CAACO,UAAD,CAAZ;IACA;;IACDC,QAAQ;EAER,CAvBQ,EAuBN,EAvBM,CAAT;EAyBA,oBACC;IAAK,SAAS,EAAC,MAAf;IAAA,uBACC;MAAA,UAAIT;IAAJ;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAKA;;GAjCQD,Q;;KAAAA,Q;AAmCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}