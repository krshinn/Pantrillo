{"ast":null,"code":"import _asyncToGenerator from\"/Users/krshinn/Documents/GitHub/Pantrillo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/krshinn/Documents/GitHub/Pantrillo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/krshinn/Documents/GitHub/Pantrillo/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";function FoodJoke(){var _useState=useState(\"Loading joke...\"),_useState2=_slicedToArray(_useState,2),resultMsg=_useState2[0],setResultMsg=_useState2[1];useEffect(function(){//fetch from the API\nfunction fetchJoke(){return _fetchJoke.apply(this,arguments);}//variable to send the data\nfunction _fetchJoke(){_fetchJoke=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.spoonacular.com/food/jokes/random?apiKey=dc13f61c52a34390aca099bc71a28778\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;return _context.abrupt(\"return\",data.text);case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetchJoke.apply(this,arguments);}var jokeString=\"\";//function to loop until you get a joke > 150 char\nfunction postJoke(){return _postJoke.apply(this,arguments);}function _postJoke(){_postJoke=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(jokeString===\"\"||jokeString.length>150)){_context2.next=6;break;}_context2.next=3;return fetchJoke();case 3:jokeString=_context2.sent;_context2.next=0;break;case 6://state set to variable\nsetResultMsg(jokeString);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _postJoke.apply(this,arguments);}postJoke();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"joke\",children:/*#__PURE__*/_jsx(\"p\",{children:resultMsg})});}export default FoodJoke;","map":{"version":3,"names":["React","useState","useEffect","FoodJoke","resultMsg","setResultMsg","fetchJoke","fetch","response","json","data","text","jokeString","postJoke","length"],"sources":["/Users/krshinn/Documents/GitHub/Pantrillo/src/components/FoodJoke.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction FoodJoke() {\n\tconst [resultMsg, setResultMsg] = useState(\"Loading joke...\");\n\n\tuseEffect(() => {\n\t\t//fetch from the API\n\t\tasync function fetchJoke(){\n\t\t\tconst response = await fetch(\n\t\t\t`https://api.spoonacular.com/food/jokes/random?apiKey=dc13f61c52a34390aca099bc71a28778`\n\t\t\t)\n\t\t\tconst data = await response.json()\n\t\t\treturn data.text\n\t\t}\n\t\t//variable to send the data\n\t\tlet jokeString = \"\"\n\n\t\t//function to loop until you get a joke > 150 char\n\t\tasync function postJoke(){\n\t\t\twhile(jokeString === \"\" || jokeString.length > 150) {\n\t\t\t\tjokeString = await fetchJoke()\n\t\t\t}\n\n\t\t\t//state set to variable\n\t\t\tsetResultMsg(jokeString);\n\t\t}\n\t\tpostJoke()\n\n\t}, [])\n\n\treturn(\n\t\t<div className=\"joke\">\n\t\t\t<p>{resultMsg}</p>\n\t\t</div>\n\t)\n}\n\nexport default FoodJoke"],"mappings":"gYAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,C,2CAEA,QAASC,CAAAA,QAAT,EAAoB,CACnB,cAAkCF,QAAQ,CAAC,iBAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eAEAH,SAAS,CAAC,UAAM,CACf;AADe,QAEAI,CAAAA,SAFA,4CASf;AATe,yFAEf,2KACwBC,CAAAA,KAAK,yFAD7B,QACOC,QADP,qCAIoBA,CAAAA,QAAQ,CAACC,IAAT,EAJpB,QAIOC,IAJP,+CAKQA,IAAI,CAACC,IALb,wDAFe,4CAUf,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEA;AAZe,QAaAC,CAAAA,QAbA,kIAaf,6IACOD,UAAU,GAAK,EAAf,EAAqBA,UAAU,CAACE,MAAX,CAAoB,GADhD,kDAEqBR,CAAAA,SAAS,EAF9B,QAEEM,UAFF,8CAKC;AACAP,YAAY,CAACO,UAAD,CAAZ,CAND,wDAbe,2CAqBfC,QAAQ,GAER,CAvBQ,CAuBN,EAvBM,CAAT,CAyBA,mBACC,YAAK,SAAS,CAAC,MAAf,uBACC,mBAAIT,SAAJ,EADD,EADD,CAKA,CAED,cAAeD,CAAAA,QAAf"},"metadata":{},"sourceType":"module"}